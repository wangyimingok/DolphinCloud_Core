@functions {
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
@{
    Layout = "_AdminPageLayout";
}
<div class="layui-fluid">
    <div class="layui-row layui-col-space15">
        <div class="layui-col-md12">
            <div class="layui-card">
                <div class="layui-card-header">用户列表</div>
                <div class="layui-card-body">
                    <table class="layui-hide" id="userTable" lay-filter="userTable"></table>
                    <script type="text/html" id="userBar">
                        <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
                        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
                    </script>
                    <script type="text/html" id="userToolbar">
                         <div class="layui-inline" style="width:260px" >
                           <input class="layui-input" id="UserName" autocomplete="off" placeholder="用户名|手机号|真实姓名|邮箱地址">
                        </div>
                        <button class="layui-btn" lay-event="search">搜索</button>
                        <button class="layui-btn" lay-event="createUser">创建新用户</button>

                    </script>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    layui.config({
        base: '@Url.Content("~/lib/layuiadmin/")' // 静态资源所在路径
    }).use(['index', 'table', 'dropdown'], function () {
        var table = layui.table;
        var dropdown = layui.dropdown;
        var $ = layui.$;
        // 创建渲染实例
        table.render({
            elem: '#userTable',
            url: '/Admin/User/GetUserPaginationDataList',
            defaultToolbar: ['filter', 'exports', 'print', {
                title: '帮助',
                layEvent: 'LAYTABLE_TIPS',
                icon: 'layui-icon-tips'
            }],
            method: "POST",
            contentType: "application/json",
            headers: { "X-CSRF-TOKEN": '@GetAntiXsrfRequestToken()' },
            height: 'full-100', // 最大高度减去其他容器已占有的高度差
            cellMinWidth: 80,
            toolbar: '#userToolbar',
            page: true,
            cols: [[
                { field: 'userID', title: '主键', sort: true },
                { field: 'userName', title: '用户名', sort: true, align: 'center' },
                { field: 'realName', title: '真实姓名', sort: true, align: 'center' },
                { field: 'mobileNumber', title: '手机号码', sort: true, align: 'center' },
                { field: 'eMailAddress', title: '邮箱地址', sort: true, align: 'center' },
                {
                    field: 'status', title: '状态', sort: true, align: 'center', templet: function (d) {
                        if (d.status == '0') {
                            return ' <span class="layui-badge layui-bg-gray">未知</span>';
                        } else if (d.status == '1') {
                            return ' <span class="layui-badge layui-bg-green">正常</span>';
                        } else if (d.status == '2') {
                            return ' <span class="layui-badge">禁用</span>';
                        }
                    }
                },
                { field: 'createBy', title: '创建人', sort: true, align: 'center' },
                { field: 'createDateTime', title: '创建时间', sort: true, align: 'center' },
                { field: 'lastModifyBy', title: '最后修改人', sort: true, align: 'center' },
                { field: 'lastModifyDate', title: '最后修改时间', sort: true, align: 'center' },
                { fixed: 'right', title: '操作', width: 125, minWidth: 125, toolbar: '#userBar' }
            ]],
            response: {
                statusCode: 200 //重新规定成功的状态码为 200，table 组件默认为 0
            },
            done: function () {
                var id = this.id;
            }
            , error: function (res, msg) {
                console.log(res, msg)
            }
        });

        //触发单元格工具事件
        table.on('tool(userTable)', function (obj) { // 双击 toolDouble
            if (obj.event === 'del') {
                layer.confirm('真的删除行么', {
                    btn: ['确定', '关闭'] //按钮
                }, function (index) {
                    obj.del();
                    $.ajax({
                        url: "/Admin/User/DeleteUser",
                        type: 'POST',
                        dataType: "JSON",
                        data: JSON.stringify(obj.data),
                        contentType: "application/json;charset=utf-8",
                        headers: { "X-CSRF-TOKEN": '@GetAntiXsrfRequestToken()' },
                        success: function (data) {
                            if (data.responseCode == 200) {
                                layer.msg(data.message, { icon: 1, offset: 'auto', time: 2000 }, function () {
                                    // debugger;
                                    //同时关闭上一级弹出层
                                    var index = parent.layer.getFrameIndex(window.name); // 获取当前 iframe 层的索引
                                    parent.layer.close(index); // 关闭当前 iframe 弹层
                                    //回调重新刷新表格
                                    table.reload('userTable');
                                });
                                //return;
                            }
                            else {
                                layer.msg(data.message, { icon: 2, offset: 'auto', time: 5000 });
                                //return;
                            }
                        },
                        error: function (data) {
                            alert(data);
                            console.log(data);
                        }
                    });
                    layer.close(index);
                });
            } else if (obj.event === 'edit') {
                layer.open({
                    title: '编辑用户信息',
                    shadeClose: true,
                    shade: false,
                    maxmin: true, //开启最大化最小化按钮
                    type: 2,
                    area: ['400px', '500px'],
                    content: '/Admin/User/Edit?UserID=' + data.userID,
                    end: function () {
                        //回调重新刷新表格
                        table.reload('userTable');
                    }
                });

            }
        });
        // 工具栏事件
        table.on('toolbar(userTable)', function (obj) {
            var id = obj.config.id;
            var checkStatus = table.checkStatus(id);
            var othis = lay(this);
            var searchKey = $(UserName).val();
            switch (obj.event) {
                case 'createUser':
                    layer.open({
                        title: '创建新用户',
                        shadeClose: true,
                        shade: false,
                        maxmin: true, //开启最大化最小化按钮
                        type: 2,
                        area: ['400px', '500px'],
                        content: '/Admin/User/Create',
                        end: function () {
                            //回调重新刷新表格
                            table.reload('userTable');
                        }
                    });
                case 'search':
                    //执行重载
                    table.reload('userTable', {
                        page: {
                            curr: 1, //重新从第 1 页开始
                        }
                        , where: {
                            searchKey
                        }
                    });
                    //对搜索框重新赋值
                    $(UserName).val(searchKey);
                    break;
            };
        });
        //触发表格复选框选择
        table.on('checkbox(test-table-index)', function (obj) {
            console.log(obj)
        });

        //触发表格单选框选择
        table.on('radio(test-table-index)', function (obj) {
            console.log(obj)
        });

        // 行单击事件
        table.on('row(test-table-index)', function (obj) {
            //console.log(obj);
            //layer.closeAll('tips');
        });
        // 行双击事件
        table.on('rowDouble(test-table-index)', function (obj) {
            console.log(obj);
        });
    });

   
</script>