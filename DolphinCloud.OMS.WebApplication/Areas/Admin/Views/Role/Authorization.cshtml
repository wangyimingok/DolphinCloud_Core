@functions {
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
@model DolphinCloud.DataModel.System.Role.RoleAuthorDataModel
<div class="layui-card">
    <div class="layui-card-header">角色权限配置</div>
    <div class="layui-card-body">
        <div class="layui-form-item">
            <label class="layui-form-label">角色</label>
            <div class="layui-input-block">
                <p><strong class="layui-form-label" id="RoleName">@Model.RoleName</strong></p>
                <input type="hidden" asp-for="RoleID" />
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">权限范围</label>
            <div class="layui-input-block">
                <div id="treePermission"></div>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">具体描述</label>
            <div class="layui-input-block">
                <textarea type="text" name="descr" lay-verify="required" autocomplete="off" class="layui-textarea"></textarea>
            </div>
        </div>
        <div class="layui-form-item layui-hide">
            <button class="layui-btn" lay-submit lay-filter="roleAuthorSubmit" id="btnroleAuthorSubmit">提交</button>
        </div>
    </div>
</div>


@* <button class="layui-btn layuiadmin-btn-forum-list" id="btnTest" data-type="batchdel">测试</button> *@

<script type="text/javascript">
    layui.use(function () {
        var tree = layui.tree;
        var layer = layui.layer;
        var util = layui.util;
        var $ = layui.$;
        $.ajax({
            url: "/Admin/Menu/GetPermissionTreeData",
            type: 'GET',
            success: function (data) {
                if (data.responseCode == 200) {
                    console.log(data);
                    tree.render({
                        elem: '#treePermission',
                        data: data.data,
                        showCheckbox: true,  // 是否显示复选框
                        onlyIconControl: true,  // 是否仅允许节点左侧图标控制展开收缩
                        id: 'permissionTree',
                        //isJump: true, // 是否允许点击节点时弹出新窗口跳转
                        // click: function (obj) {
                        //     var data = obj.data;  //获取当前点击的节点数据
                        //     layer.msg('状态：' + obj.state + '<br>节点数据：' + JSON.stringify(data));
                        // }
                    });
                    layui.form.render("select");
                }
            },
            error: function (data) {
                alert(data);
                console.log(data);
            }
        });
        //var treeData=
        // 渲染
        util.event('lay-filter', {
            roleAuthorSubmit: function () {
                var checkedData = tree.getChecked('permissionTree');
                var JsonData = { roleID: $("#RoleID").val(), roleName: $("#RoleName").text(), Permissions: checkedData };
                console.log(JSON.stringify(JsonData));
                layer.alert(JSON.stringify(JsonData), { shade: 0 });
                console.log(checkedData);
                $.ajax({
                    url: "/Admin/Role/Authorization",
                    type: 'POST',
                    dataType: "JSON",
                    data: JSON.stringify(JsonData),
                    contentType: "application/json;charset=utf-8",
                    headers: { "X-CSRF-TOKEN": '@GetAntiXsrfRequestToken()' },
                    success: function (data) {
                        if (data.responseCode == 200) {
                            layer.msg(data.message, { icon: 1, offset: 'auto', time: 2000 }, function () {
                                //同时关闭上一级弹出层
                                var index = parent.layer.getFrameIndex(window.name); // 获取当前 iframe 层的索引                               
                                parent.layer.close(index); // 关闭当前 iframe 弹层
                            });
                        }
                        else {
                            layer.msg(data.message, { icon: 2, offset: 'auto', time: 5000 });
                            //return;
                        }
                    },
                    error: function (data) {
                        alert(data);
                        console.log(data);
                    }
                });
            }
        });
       
    });    
</script>